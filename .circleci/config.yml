version: 2.1

orbs:
  ruby: circleci/ruby@1.1.1
  node: circleci/node@4.1.0

#  ジョブ実行環境の定義
executors:
  container:
    working_directory: ~/kurashinolog # ステップを実行するディレクトリ
    docker:
      - image: cimg/ruby:2.7.1-node
        environment:
          TZ: Asia/Tokyo

jobs:
  build:
    executor: container # ジョブ実行環境の指定
    steps:
      - checkout # working_directoryの場所にgitコードをコピーする
      - ruby/install-deps # rubyオーブを使用して依存関係をインストールする
      - node/install-packages: # nodeオーブを使用してパッケージをインストールする
          pkg-manager: yarn    # yarnを使用し、yarn.lockで依存関係をキャッシュするよう指定する
          cache-path: 'yarn.lock'

  test:
    parallelism: 3 # 「並列(=parallel)ジョブコンテナ」を実行して、テストの高速化を可能にする（テストが複数のコンテナに分割される）
    docker:
      - image: cimg/ruby:2.7.1-node # ステップコマンドが実行されるプライマリDockerイメージ
        environment: # プライマリコンテナに適用されるruby/rails固有の環境変数
          BUNDLE_JOBS: '3'
          BUNDLE_RETRY: '3'
          RAILS_ENV: test
          DB_DATABASE: ci_test
          DB_HOST: 127.0.0.1
          DB_USERNAME: root
          DB_PASSWORD: password
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: ci_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-path: 'yarn.lock'
      - run: # DB操作を実行する前にセカンダリコンテナが起動することを確認する
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load -trace
      - ruby/rspec-test # rspecを並列実行する

# 上記のジョブを調整する
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
         requires: # ビルドが成功してからテストを実行する
           - build
